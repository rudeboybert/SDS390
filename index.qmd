---
title: "SDS390: Ecological Forecasting"
---


<iframe src="https://docs.google.com/spreadsheets/d/e/2PACX-1vQw8rrRUpbMRdy01pwUDw4C65XK1ekgQZWUeWN66L5KrAwtXuWMuo1EEk-2qULxsYPforSIAIsEI1dY/pubhtml?gid=538580312&amp;single=true&amp;widget=true&amp;headers=false" width="100%" height="800"></iframe>



# Lec 4.1: Thu 9/26

## Announcements

1. 


## Lecture

1. DataCamp Chap 3, Video 4, Exercise 1



***



# Lec 3.2: Thu 9/21

## Announcements

1. First problem set assigned on Tue, which will build into first mini-presentation
1. Mountain Day recap
1. Originally assigned course ["Manipulating Time Series Data in Python"](https://app.datacamp.com/learn/courses/manipulating-time-series-data-in-python) due next Tue 9/26 before class 
1. Go to Roster Google Sheet (top right of page) and fill DC columns


## Lecture

1. DataCamp
    1. Poll class on [sli.do](https://app.sli.do/event/hF9K8zvE9KGPCwexfM1YJu) about DC
    1. DC exercise numbering system: Ex 2.1.3 = Chapter 2, Video 1, Exercise 3.
    1. Prof. Kim gets vulnerable and does MTSD course Ex 1.3.1 and 2.1.3
    1. Screencasts location
    1. Continuing [Time Series with Python](https://app.datacamp.com/learn/skill-tracks/time-series-with-python) skill track, the next course ["Time Series Analysis in Python"](https://app.datacamp.com/learn/courses/time-series-analysis-in-python) due Tue 10/3. If there is an Exercise you'd like me to do in class, let me know. 
1. Finish chalk talk on FPP Chapter 2: 2.7 and 2.8. See code below

```{r eval=FALSE, echo=TRUE}
library(fpp3)

# Code block 1 ----
# Lag plots: relationship of a TS variable with itself in the past
# Create regular TS plot of data in Fig 2.19 Beer production over time
recent_production <- aus_production |>
  filter(year(Quarter) >= 2000)

# Note time index meta-data = 1Q = quarter
recent_production

# Note patterns
recent_production |> autoplot(Beer)
```



***



# Lec 2.2: Thu 9/14

- Slido results from [last time](https://analytics.slido.com/share/XIJcW_05mEyupBJ2tuIT0cTYhCVNaSKt_S6IXFz9P_85KW39KIJcX_0zn_0tn_0sn_04mEwpT_cBSQUZ7NfeRoClIynj_ST2bmxub3FsZXFubP0vmHyIUAu_SVrj9mYafEeNA6EIvbcFZweiMI4O1A7kdCS5bg)
- ChatGPT result on global temperature
- Install `fpp3` R package
- Chalk talk on FPP Chapter 2: Time Series Graphics. During chalk talk I will refer to "code blocks" below. Feel free to copy to a `playground.qmd` file.
- Canada wins gold medal in ice hockey in overtime at 2010 Vancouver Winter Olympics
    - The [Golden Goal ðŸ¥‡](https://www.youtube.com/watch?v=GBMriA6maIU&t=18s)
    - A clear [cyclical pattern](https://www.zdnet.com/a/img/resize/51e841b3331a3340a2b95219ddc1a7826fcaee31/2013/11/13/e384930f-4c5f-11e3-90a0-0291187ef9b6/epcor_edmonton_water_usage_flush_olympic_gold_game.jpg?auto=webp&fit=crop&height=1200&width=1200) in water consumption (from ðŸš½ðŸš¾ðŸ§»)


```{r eval=FALSE, echo=TRUE}
# Lec 2.2 Code
library(fpp3)

# Code block 1 ----
# Compare meta-data of data_tibble and data_tsibble
data_tibble <- tibble(
  Year = 2015:2019,
  Observation = c(123, 39, 78, 52, 110)
)
data_tibble

# Set variable that indexes the data: Year
data_tsibble <- tsibble(data_tibble, index = "Year")
data_tsibble


# Code block 2 ----
# Scatterplot of relationship between two time series
# Code for Fig. 2.14:
vic_elec |>
  filter(year(Time) == 2014) |>
  ggplot(aes(x = Temperature, y = Demand)) +
  geom_point() +
  labs(x = "Temperature (degrees Celsius)",
       y = "Electricity demand (GW)")

# Code for Fig 2.14 with (simplified) notion of time
vic_elec |>
  filter(year(Time) == 2014) |>
  # Add this:
  mutate(month = factor(month(Date))) |>
  # Add color scale
  ggplot(aes(x = Temperature, y = Demand, col = month)) +
  geom_point() +
  labs(x = "Temperature (degrees Celsius)",
       y = "Electricity demand (GW)")
```



***



# Lec 2.1: Tue 9/12

1. Join `#questions` channel on Slack
1. Fill in your information on roster
1. ChatGPT citation mechanism: share link
1. Developing a python/jupyter notebook workflow
    1. Open a jupyter notebook
    1. Start "Manipulating Time Series Data in Python" DataCamp course, to be completed by Tue 9/19 before class
    1. Screencast recording [here](https://drive.google.com/file/d/1kHVmegmsxClToWpUjak6s2cwcRZJ8vJ8/view?usp=sharing)



***



# Lec 1.2: Thu 9/7

Install software and computing: See syllabus
